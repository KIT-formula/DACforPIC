

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jun 30 13:04:45 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.42
    13                           ; Generated 13/04/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F88 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001E                     	;# 
    73  001F                     	;# 
    74  0081                     	;# 
    75  0085                     	;# 
    76  0086                     	;# 
    77  008C                     	;# 
    78  008D                     	;# 
    79  008E                     	;# 
    80  008F                     	;# 
    81  0090                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0094                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  0105                     	;# 
    93  010C                     	;# 
    94  010D                     	;# 
    95  010E                     	;# 
    96  010F                     	;# 
    97  018C                     	;# 
    98  018D                     	;# 
    99  0013                     _SSPBUF	set	19
   100  0005                     _PORTAbits	set	5
   101  0012                     _T2CON	set	18
   102  0011                     _TMR2	set	17
   103  0014                     _SSPCON	set	20
   104  0006                     _PORTB	set	6
   105  0005                     _PORTA	set	5
   106  0061                     _TMR2IF	set	97
   107  005F                     _GIE	set	95
   108  005E                     _PEIE	set	94
   109  0094                     _SSPSTATbits	set	148
   110  0092                     _PR2	set	146
   111  0094                     _SSPSTAT	set	148
   112  009B                     _ANSEL	set	155
   113  0086                     _TRISB	set	134
   114  0085                     _TRISA	set	133
   115  008F                     _OSCCON	set	143
   116  0461                     _TMR2IE	set	1121
   117                           
   118                           ; #config settings
   119  0000                     
   120                           	psect	cinit
   121  0013                     start_initialization:	
   122  0013                     __initialization:	
   123                           
   124                           ; Clear objects allocated to COMMON
   125  0013  01F0               	clrf	__pbssCOMMON& (0+127)
   126  0014  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   127  0015  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   128  0016  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   129  0017  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   130  0018  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   131  0019                     end_of_initialization:	
   132                           ;End of C runtime variable initialization code
   133                           
   134  0019                     __end_of__initialization:	
   135  0019  0183               	clrf	3
   136  001A  118A  281C         	ljmp	_main	;jump to C main() function
   137                           
   138                           	psect	bssCOMMON
   139  0070                     __pbssCOMMON:	
   140  0070                     _Count:	
   141  0070                     	ds	2
   142  0072                     _flag:	
   143  0072                     	ds	2
   144  0074                     _send_data:	
   145  0074                     	ds	2
   146                           
   147                           	psect	cstackCOMMON
   148  0076                     __pcstackCOMMON:	
   149  0076                     ?_main:	
   150  0076                     ?_InterTimer:	
   151                           ; 1 bytes @ 0x0
   152                           
   153  0076                     ??_InterTimer:	
   154                           ; 1 bytes @ 0x0
   155                           
   156                           
   157                           ; 1 bytes @ 0x0
   158  0076                     	ds	4
   159  007A                     ??_main:	
   160                           
   161                           ; 1 bytes @ 0x4
   162  007A                     	ds	1
   163                           
   164                           	psect	maintext
   165  001C                     __pmaintext:	
   166 ;;
   167 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   168 ;;
   169 ;; *************** function _main *****************
   170 ;; Defined at:
   171 ;;		line 34 in file "main.c"
   172 ;; Parameters:    Size  Location     Type
   173 ;;		None
   174 ;; Auto vars:     Size  Location     Type
   175 ;;		None
   176 ;; Return value:  Size  Location     Type
   177 ;;                  1    wreg      void 
   178 ;; Registers used:
   179 ;;		wreg, status,2
   180 ;; Tracked objects:
   181 ;;		On entry : B00/0
   182 ;;		On exit  : 0/0
   183 ;;		Unchanged: 0/0
   184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   185 ;;      Params:         0       0       0       0       0
   186 ;;      Locals:         0       0       0       0       0
   187 ;;      Temps:          1       0       0       0       0
   188 ;;      Totals:         1       0       0       0       0
   189 ;;Total ram usage:        1 bytes
   190 ;; Hardware stack levels required when called:    1
   191 ;; This function calls:
   192 ;;		Nothing
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           
   199                           ;psect for function _main
   200  001C                     _main:	
   201                           
   202                           ;main.c: 36: OSCCON = 0b00000000;
   203                           
   204                           ;incstack = 0
   205                           ; Regs used in _main: [wreg+status,2]
   206  001C  1683               	bsf	3,5	;RP0=1, select bank1
   207  001D  1303               	bcf	3,6	;RP1=0, select bank1
   208  001E  018F               	clrf	15	;volatile
   209                           
   210                           ;main.c: 39: PORTA = 0x00;
   211  001F  1283               	bcf	3,5	;RP0=0, select bank0
   212  0020  1303               	bcf	3,6	;RP1=0, select bank0
   213  0021  0185               	clrf	5	;volatile
   214                           
   215                           ;main.c: 40: PORTB = 0x00;
   216  0022  0186               	clrf	6	;volatile
   217                           
   218                           ;main.c: 41: TRISA = 0xFF;
   219  0023  30FF               	movlw	255
   220  0024  1683               	bsf	3,5	;RP0=1, select bank1
   221  0025  1303               	bcf	3,6	;RP1=0, select bank1
   222  0026  0085               	movwf	5	;volatile
   223                           
   224                           ;main.c: 42: TRISB = 0b00000000;
   225  0027  0186               	clrf	6	;volatile
   226                           
   227                           ;main.c: 43: ANSEL = 0x00;
   228  0028  019B               	clrf	27	;volatile
   229                           
   230                           ;main.c: 46: SSPSTAT = 0b11000000;
   231  0029  30C0               	movlw	192
   232  002A  0094               	movwf	20	;volatile
   233                           
   234                           ;main.c: 47: SSPCON = 0b00100001;
   235  002B  3021               	movlw	33
   236  002C  1283               	bcf	3,5	;RP0=0, select bank0
   237  002D  1303               	bcf	3,6	;RP1=0, select bank0
   238  002E  0094               	movwf	20	;volatile
   239                           
   240                           ;main.c: 48: PORTB = 0b00100000;
   241  002F  3020               	movlw	32
   242  0030  0086               	movwf	6	;volatile
   243                           
   244                           ;main.c: 51: PEIE = 1;
   245  0031  170B               	bsf	11,6	;volatile
   246                           
   247                           ;main.c: 52: GIE = 1;
   248  0032  178B               	bsf	11,7	;volatile
   249                           
   250                           ;main.c: 55: TMR2 = 0;
   251  0033  0191               	clrf	17	;volatile
   252                           
   253                           ;main.c: 56: TMR2IF = 0;
   254  0034  108C               	bcf	12,1	;volatile
   255                           
   256                           ;main.c: 57: TMR2IE = 1;
   257  0035  1683               	bsf	3,5	;RP0=1, select bank1
   258  0036  1303               	bcf	3,6	;RP1=0, select bank1
   259  0037  148C               	bsf	12,1	;volatile
   260                           
   261                           ;main.c: 58: T2CON = 0b00000000;
   262  0038  1283               	bcf	3,5	;RP0=0, select bank0
   263  0039  1303               	bcf	3,6	;RP1=0, select bank0
   264  003A  0192               	clrf	18	;volatile
   265                           
   266                           ;main.c: 59: PR2 = 9;
   267  003B  3009               	movlw	9
   268  003C  1683               	bsf	3,5	;RP0=1, select bank1
   269  003D  1303               	bcf	3,6	;RP1=0, select bank1
   270  003E  0092               	movwf	18	;volatile
   271  003F                     l552:	
   272                           ;main.c: 61: while(1) {
   273                           
   274                           
   275                           ;main.c: 62: if(PORTAbits.RA0 == 1){
   276  003F  1283               	bcf	3,5	;RP0=0, select bank0
   277  0040  1C05               	btfss	5,0	;volatile
   278  0041  283F               	goto	l552
   279                           
   280                           ;main.c: 63: T2CON = 0b00100100;
   281  0042  3024               	movlw	36
   282  0043  0092               	movwf	18	;volatile
   283  0044                     l51:	
   284                           ;main.c: 64: while(PORTAbits.RA0);
   285                           
   286  0044  1805               	btfsc	5,0	;volatile
   287  0045  2844               	goto	l51
   288                           
   289                           ;main.c: 65: T2CON = 0b00000001;
   290  0046  3001               	movlw	1
   291  0047  0092               	movwf	18	;volatile
   292                           
   293                           ;main.c: 66: PORTB = 0b00001000;
   294  0048  3008               	movlw	8
   295  0049  0086               	movwf	6	;volatile
   296                           
   297                           ;main.c: 67: SSPBUF = Count >> 8 | 0x30;
   298  004A  0871               	movf	_Count+1,w
   299  004B  3830               	iorlw	48
   300  004C  0093               	movwf	19	;volatile
   301  004D                     l54:	
   302                           ;main.c: 68: while(!SSPSTATbits.BF);
   303                           
   304  004D  1683               	bsf	3,5	;RP0=1, select bank1
   305  004E  1303               	bcf	3,6	;RP1=0, select bank1
   306  004F  1C14               	btfss	20,0	;volatile
   307  0050  284D               	goto	l54
   308                           
   309                           ;main.c: 69: SSPBUF = Count;
   310  0051  0870               	movf	_Count,w
   311  0052  1283               	bcf	3,5	;RP0=0, select bank0
   312  0053  1303               	bcf	3,6	;RP1=0, select bank0
   313  0054  0093               	movwf	19	;volatile
   314  0055                     l57:	
   315                           ;main.c: 70: while(!SSPSTATbits.BF);
   316                           
   317  0055  1683               	bsf	3,5	;RP0=1, select bank1
   318  0056  1303               	bcf	3,6	;RP1=0, select bank1
   319  0057  1C14               	btfss	20,0	;volatile
   320  0058  2855               	goto	l57
   321                           
   322                           ;main.c: 71: PORTB = 0b00100000;
   323  0059  3020               	movlw	32
   324  005A  1283               	bcf	3,5	;RP0=0, select bank0
   325  005B  1303               	bcf	3,6	;RP1=0, select bank0
   326  005C  0086               	movwf	6	;volatile
   327                           
   328                           ;main.c: 72: _delay((unsigned long)((5)*(20000000/4000000.0)));
   329  005D  3008               	movlw	8
   330  005E  00FA               	movwf	??_main
   331  005F                     u67:	
   332  005F  0BFA               	decfsz	??_main,f
   333  0060  285F               	goto	u67
   334                           
   335                           ;main.c: 73: PORTB = 0b00101000;
   336  0061  3028               	movlw	40
   337  0062  1283               	bcf	3,5	;RP0=0, select bank0
   338  0063  1303               	bcf	3,6	;RP1=0, select bank0
   339  0064  0086               	movwf	6	;volatile
   340                           
   341                           ;main.c: 74: Count = 0;
   342  0065  01F0               	clrf	_Count
   343  0066  01F1               	clrf	_Count+1
   344  0067  283F               	goto	l552
   345  0068                     __end_of_main:	
   346                           
   347                           	psect	text1
   348  0068                     __ptext1:	
   349 ;; *************** function _InterTimer *****************
   350 ;; Defined at:
   351 ;;		line 79 in file "main.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   365 ;;      Params:         0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0
   367 ;;      Temps:          4       0       0       0       0
   368 ;;      Totals:         4       0       0       0       0
   369 ;;Total ram usage:        4 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		Interrupt level 1
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           
   379                           ;psect for function _InterTimer
   380  0068                     _InterTimer:	
   381                           
   382                           ;main.c: 80: if(TMR2IF == 1){
   383  0068  1C8C               	btfss	12,1	;volatile
   384  0069  2871               	goto	L1
   385                           
   386                           ;main.c: 81: Count += 21;
   387  006A  3015               	movlw	21
   388  006B  07F0               	addwf	_Count,f
   389  006C  1803               	skipnc
   390  006D  0AF1               	incf	_Count+1,f
   391  006E  3000               	movlw	0
   392  006F  07F1               	addwf	_Count+1,f
   393                           
   394                           ;main.c: 82: }
   395                           ;main.c: 83: TMR2IF = 0;
   396  0070  108C               	bcf	12,1	;volatile
   397  0071                     L1:	
   398  0071  0879               	movf	??_InterTimer+3,w
   399  0072  00FF               	movwf	127
   400  0073  0878               	movf	??_InterTimer+2,w
   401  0074  008A               	movwf	10
   402  0075  0877               	movf	??_InterTimer+1,w
   403  0076  0084               	movwf	4
   404  0077  0E76               	swapf	??_InterTimer^(0+-128),w
   405  0078  0083               	movwf	3
   406  0079  0EFE               	swapf	126,f
   407  007A  0E7E               	swapf	126,w
   408  007B  0009               	retfie
   409  007C                     __end_of_InterTimer:	
   410  007E                     btemp	set	126	;btemp
   411  007E                     wtemp0	set	126
   412                           
   413                           	psect	intentry
   414  0004                     __pintentry:	
   415                           ;incstack = 0
   416                           ; Regs used in _InterTimer: [wreg]
   417                           
   418  0004                     interrupt_function:	
   419  007E                     saved_w	set	btemp
   420  0004  00FE               	movwf	btemp
   421  0005  0E03               	swapf	3,w
   422  0006  00F6               	movwf	??_InterTimer
   423  0007  0804               	movf	4,w
   424  0008  00F7               	movwf	??_InterTimer+1
   425  0009  080A               	movf	10,w
   426  000A  00F8               	movwf	??_InterTimer+2
   427  000B  1283               	bcf	3,5	;RP0=0, select bank0
   428  000C  1303               	bcf	3,6	;RP1=0, select bank0
   429  000D  087F               	movf	btemp+1,w
   430  000E  00F9               	movwf	??_InterTimer+3
   431  000F  118A  2868         	ljmp	_InterTimer


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterTimer in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _InterTimer                                           4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _InterTimer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jun 30 13:04:45 2017

            __CFG_CP$OFF 0000              _SSPSTATbits 0094                       l51 0044  
                     l54 004D                       l57 0055                       u67 005F  
                    l552 003F                      _GIE 005F                      _PR2 0092  
           __CFG_CPD$OFF 0000                      fsr0 0004             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     _PEIE 005E                     _TMR2 0011  
           __CFG_WRT$OFF 0000                     _flag 0072                     _main 001C  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0011  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000                    ?_main 0076  
          __CFG_WDTE$OFF 0000                    _ANSEL 009B                    _T2CON 0012  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086           __CFG_CCPMX$RB3 0000            __CFG_PWRTE$ON 0000  
                  _Count 0070           __CFG_FCMEN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0013  
           __end_of_main 0068                   ??_main 007A               _InterTimer 0068  
                 _OSCCON 008F                   _TMR2IE 0461                   _TMR2IF 0061  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
__end_of__initialization 0019           __pcstackCOMMON 0076              ?_InterTimer 0076  
             __pmaintext 001C               __pintentry 0004                  _SSPSTAT 0094  
    __size_of_InterTimer 0014                  __ptext1 0068     end_of_initialization 0019  
              _PORTAbits 0005             ??_InterTimer 0076      start_initialization 0013  
     __end_of_InterTimer 007C              __pbssCOMMON 0070                ___latbits 0001  
      interrupt_function 0004                _send_data 0074            __size_of_main 004C  
               intlevel1 0000  
