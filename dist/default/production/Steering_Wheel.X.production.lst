

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Jun 29 15:38:01 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.41
    16                           ; Generated 25/01/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F88 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  008F                     	;# 
    84  0090                     	;# 
    85  0092                     	;# 
    86  0093                     	;# 
    87  0094                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  0105                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  010F                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102                           
   103                           	psect	nvBANK0
   104  0026                     __pnvBANK0:	
   105  0026                     _ref:	
   106  0026                     	ds	3
   107  0013                     _SSPBUF	set	19
   108  0005                     _PORTAbits	set	5
   109  0012                     _T2CON	set	18
   110  0011                     _TMR2	set	17
   111  0014                     _SSPCON	set	20
   112  0006                     _PORTB	set	6
   113  0005                     _PORTA	set	5
   114  0061                     _TMR2IF	set	97
   115  005F                     _GIE	set	95
   116  005E                     _PEIE	set	94
   117  0094                     _SSPSTATbits	set	148
   118  0092                     _PR2	set	146
   119  0094                     _SSPSTAT	set	148
   120  009B                     _ANSEL	set	155
   121  0086                     _TRISB	set	134
   122  0085                     _TRISA	set	133
   123  008F                     _OSCCON	set	143
   124  0461                     _TMR2IE	set	1121
   125                           
   126                           ; #config settings
   127  0000                     
   128                           	psect	cinit
   129  0013                     start_initialization:	
   130  0013                     __initialization:	
   131                           
   132                           ; Clear objects allocated to COMMON
   133  0013  01F0               	clrf	__pbssCOMMON& (0+127)
   134  0014  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   135  0015  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   136  0016  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   137  0017  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   138  0018  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   139  0019  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   140  001A  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   141  001B  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   142                           
   143                           ; Clear objects allocated to BANK0
   144  001C  01A0               	clrf	__pbssBANK0& (0+127)
   145  001D  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   146  001E  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   147  001F  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   148  0020  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   149  0021  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   150  0022                     end_of_initialization:	
   151                           ;End of C runtime variable initialization code
   152                           
   153  0022                     __end_of__initialization:	
   154  0022  0183               	clrf	3
   155  0023  118A  2825         	ljmp	_main	;jump to C main() function
   156                           
   157                           	psect	bssCOMMON
   158  0070                     __pbssCOMMON:	
   159  0070                     _byte:	
   160  0070                     	ds	3
   161  0073                     _count2:	
   162  0073                     	ds	2
   163  0075                     _flag:	
   164  0075                     	ds	2
   165  0077                     _send_data:	
   166  0077                     	ds	2
   167                           
   168                           	psect	bssBANK0
   169  0020                     __pbssBANK0:	
   170  0020                     _Count:	
   171  0020                     	ds	3
   172  0023                     _width:	
   173  0023                     	ds	3
   174                           
   175                           	psect	cstackCOMMON
   176  0079                     __pcstackCOMMON:	
   177  0079                     ?_main:	
   178  0079                     ?_InterTimer:	
   179                           ; 1 bytes @ 0x0
   180                           
   181  0079                     ??_InterTimer:	
   182                           ; 1 bytes @ 0x0
   183                           
   184                           
   185                           ; 1 bytes @ 0x0
   186  0079                     	ds	4
   187                           
   188                           	psect	cstackBANK0
   189  0029                     __pcstackBANK0:	
   190  0029                     ??_main:	
   191                           
   192                           ; 1 bytes @ 0x0
   193  0029                     	ds	1
   194                           
   195                           	psect	maintext
   196  0025                     __pmaintext:	
   197 ;;
   198 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   199 ;;
   200 ;; *************** function _main *****************
   201 ;; Defined at:
   202 ;;		line 35 in file "main.c"
   203 ;; Parameters:    Size  Location     Type
   204 ;;		None
   205 ;; Auto vars:     Size  Location     Type
   206 ;;		None
   207 ;; Return value:  Size  Location     Type
   208 ;;                  1    wreg      void 
   209 ;; Registers used:
   210 ;;		wreg, status,2
   211 ;; Tracked objects:
   212 ;;		On entry : B00/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   216 ;;      Params:         0       0       0       0       0
   217 ;;      Locals:         0       0       0       0       0
   218 ;;      Temps:          0       1       0       0       0
   219 ;;      Totals:         0       1       0       0       0
   220 ;;Total ram usage:        1 bytes
   221 ;; Hardware stack levels required when called:    1
   222 ;; This function calls:
   223 ;;		Nothing
   224 ;; This function is called by:
   225 ;;		Startup code after reset
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229                           
   230                           ;psect for function _main
   231  0025                     _main:	
   232                           
   233                           ;main.c: 37: OSCCON = 0b00000000;
   234                           
   235                           ;incstack = 0
   236                           ; Regs used in _main: [wreg+status,2]
   237  0025  1683               	bsf	3,5	;RP0=1, select bank1
   238  0026  1303               	bcf	3,6	;RP1=0, select bank1
   239  0027  018F               	clrf	15	;volatile
   240                           
   241                           ;main.c: 40: PORTA = 0x00;
   242  0028  1283               	bcf	3,5	;RP0=0, select bank0
   243  0029  1303               	bcf	3,6	;RP1=0, select bank0
   244  002A  0185               	clrf	5	;volatile
   245                           
   246                           ;main.c: 41: PORTB = 0x00;
   247  002B  0186               	clrf	6	;volatile
   248                           
   249                           ;main.c: 42: TRISA = 0xFF;
   250  002C  30FF               	movlw	255
   251  002D  1683               	bsf	3,5	;RP0=1, select bank1
   252  002E  1303               	bcf	3,6	;RP1=0, select bank1
   253  002F  0085               	movwf	5	;volatile
   254                           
   255                           ;main.c: 43: TRISB = 0b00000000;
   256  0030  0186               	clrf	6	;volatile
   257                           
   258                           ;main.c: 44: ANSEL = 0x00;
   259  0031  019B               	clrf	27	;volatile
   260                           
   261                           ;main.c: 47: SSPSTAT = 0b11000000;
   262  0032  30C0               	movlw	192
   263  0033  0094               	movwf	20	;volatile
   264                           
   265                           ;main.c: 48: SSPCON = 0b00100001;
   266  0034  3021               	movlw	33
   267  0035  1283               	bcf	3,5	;RP0=0, select bank0
   268  0036  1303               	bcf	3,6	;RP1=0, select bank0
   269  0037  0094               	movwf	20	;volatile
   270                           
   271                           ;main.c: 49: PORTB = 0b00100000;
   272  0038  3020               	movlw	32
   273  0039  0086               	movwf	6	;volatile
   274                           
   275                           ;main.c: 52: PEIE = 1;
   276  003A  170B               	bsf	11,6	;volatile
   277                           
   278                           ;main.c: 53: GIE = 1;
   279  003B  178B               	bsf	11,7	;volatile
   280                           
   281                           ;main.c: 56: TMR2 = 0;
   282  003C  0191               	clrf	17	;volatile
   283                           
   284                           ;main.c: 57: TMR2IF = 0;
   285  003D  108C               	bcf	12,1	;volatile
   286                           
   287                           ;main.c: 58: TMR2IE = 1;
   288  003E  1683               	bsf	3,5	;RP0=1, select bank1
   289  003F  1303               	bcf	3,6	;RP1=0, select bank1
   290  0040  148C               	bsf	12,1	;volatile
   291                           
   292                           ;main.c: 59: T2CON = 0b00000000;
   293  0041  1283               	bcf	3,5	;RP0=0, select bank0
   294  0042  1303               	bcf	3,6	;RP1=0, select bank0
   295  0043  0192               	clrf	18	;volatile
   296                           
   297                           ;main.c: 60: PR2 = 9;
   298  0044  3009               	movlw	9
   299  0045  1683               	bsf	3,5	;RP0=1, select bank1
   300  0046  1303               	bcf	3,6	;RP1=0, select bank1
   301  0047  0092               	movwf	18	;volatile
   302                           
   303                           ;main.c: 62: ref = 2000.0 / 4096.0;
   304  0048  3000               	movlw	0
   305  0049  1283               	bcf	3,5	;RP0=0, select bank0
   306  004A  1303               	bcf	3,6	;RP1=0, select bank0
   307  004B  00A6               	movwf	_ref
   308  004C  30FA               	movlw	250
   309  004D  00A7               	movwf	_ref+1
   310  004E  303E               	movlw	62
   311  004F  00A8               	movwf	_ref+2
   312  0050                     l646:	
   313                           ;main.c: 64: while(1) {
   314                           
   315                           
   316                           ;main.c: 65: if(PORTAbits.RA0 == 1){
   317  0050  1C05               	btfss	5,0	;volatile
   318  0051  2850               	goto	l646
   319                           
   320                           ;main.c: 66: T2CON = 0b00100100;
   321  0052  3024               	movlw	36
   322  0053  0092               	movwf	18	;volatile
   323  0054                     l57:	
   324                           ;main.c: 67: while(PORTAbits.RA0);
   325                           
   326  0054  1805               	btfsc	5,0	;volatile
   327  0055  2854               	goto	l57
   328                           
   329                           ;main.c: 68: T2CON = 0b00000001;
   330  0056  3001               	movlw	1
   331  0057  0092               	movwf	18	;volatile
   332                           
   333                           ;main.c: 72: PORTB = 0b00001000;
   334  0058  3008               	movlw	8
   335  0059  0086               	movwf	6	;volatile
   336                           
   337                           ;main.c: 73: SSPBUF = count2 >> 8 | 0x30;
   338  005A  0874               	movf	_count2+1,w
   339  005B  3830               	iorlw	48
   340  005C  0093               	movwf	19	;volatile
   341  005D                     l60:	
   342                           ;main.c: 74: while(!SSPSTATbits.BF);
   343                           
   344  005D  1683               	bsf	3,5	;RP0=1, select bank1
   345  005E  1303               	bcf	3,6	;RP1=0, select bank1
   346  005F  1C14               	btfss	20,0	;volatile
   347  0060  285D               	goto	l60
   348                           
   349                           ;main.c: 75: SSPBUF = count2;
   350  0061  0873               	movf	_count2,w
   351  0062  1283               	bcf	3,5	;RP0=0, select bank0
   352  0063  1303               	bcf	3,6	;RP1=0, select bank0
   353  0064  0093               	movwf	19	;volatile
   354  0065                     l63:	
   355                           ;main.c: 76: while(!SSPSTATbits.BF);
   356                           
   357  0065  1683               	bsf	3,5	;RP0=1, select bank1
   358  0066  1303               	bcf	3,6	;RP1=0, select bank1
   359  0067  1C14               	btfss	20,0	;volatile
   360  0068  2865               	goto	l63
   361                           
   362                           ;main.c: 77: PORTB = 0b00100000;
   363  0069  3020               	movlw	32
   364  006A  1283               	bcf	3,5	;RP0=0, select bank0
   365  006B  1303               	bcf	3,6	;RP1=0, select bank0
   366  006C  0086               	movwf	6	;volatile
   367                           
   368                           ;main.c: 78: _delay((unsigned long)((5)*(20000000/4000000.0)));
   369  006D  3007               	movlw	7
   370  006E  1283               	bcf	3,5	;RP0=0, select bank0
   371  006F  1303               	bcf	3,6	;RP1=0, select bank0
   372  0070  00A9               	movwf	??_main
   373  0071                     u147:	
   374  0071  0BA9               	decfsz	??_main,f
   375  0072  2871               	goto	u147
   376  0073  0000               	nop
   377                           
   378                           ;main.c: 79: PORTB = 0b00101000;
   379  0074  3028               	movlw	40
   380  0075  1283               	bcf	3,5	;RP0=0, select bank0
   381  0076  1303               	bcf	3,6	;RP1=0, select bank0
   382  0077  0086               	movwf	6	;volatile
   383                           
   384                           ;main.c: 80: count2 = 0;
   385  0078  01F3               	clrf	_count2
   386  0079  01F4               	clrf	_count2+1
   387  007A  2850               	goto	l646
   388  007B                     __end_of_main:	
   389                           
   390                           	psect	text1
   391  007B                     __ptext1:	
   392 ;; *************** function _InterTimer *****************
   393 ;; Defined at:
   394 ;;		line 85 in file "main.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          4       0       0       0       0
   411 ;;      Totals:         4       0       0       0       0
   412 ;;Total ram usage:        4 bytes
   413 ;; Hardware stack levels used:    1
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		Interrupt level 1
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           
   422                           ;psect for function _InterTimer
   423  007B                     _InterTimer:	
   424                           
   425                           ;main.c: 86: if(TMR2IF == 1){
   426  007B  1C8C               	btfss	12,1	;volatile
   427  007C  2887               	goto	L1
   428                           
   429                           ;main.c: 87: PORTB = 0b00000001;
   430  007D  3001               	movlw	1
   431  007E  0086               	movwf	6	;volatile
   432                           
   433                           ;main.c: 88: count2 += 21;
   434  007F  3015               	movlw	21
   435  0080  07F3               	addwf	_count2,f
   436  0081  1803               	skipnc
   437  0082  0AF4               	incf	_count2+1,f
   438  0083  3000               	movlw	0
   439  0084  07F4               	addwf	_count2+1,f
   440                           
   441                           ;main.c: 89: PORTB = 0b00000000;
   442  0085  0186               	clrf	6	;volatile
   443                           
   444                           ;main.c: 90: }
   445                           ;main.c: 91: TMR2IF = 0;
   446  0086  108C               	bcf	12,1	;volatile
   447  0087                     L1:	
   448  0087  087C               	movf	??_InterTimer+3,w
   449  0088  00FF               	movwf	127
   450  0089  087B               	movf	??_InterTimer+2,w
   451  008A  008A               	movwf	10
   452  008B  087A               	movf	??_InterTimer+1,w
   453  008C  0084               	movwf	4
   454  008D  0E79               	swapf	??_InterTimer^(0+-128),w
   455  008E  0083               	movwf	3
   456  008F  0EFE               	swapf	126,f
   457  0090  0E7E               	swapf	126,w
   458  0091  0009               	retfie
   459  0092                     __end_of_InterTimer:	
   460  007E                     btemp	set	126	;btemp
   461  007E                     wtemp0	set	126
   462                           
   463                           	psect	intentry
   464  0004                     __pintentry:	
   465                           ;incstack = 0
   466                           ; Regs used in _InterTimer: [wreg+status,2]
   467                           
   468  0004                     interrupt_function:	
   469  007E                     saved_w	set	btemp
   470  0004  00FE               	movwf	btemp
   471  0005  0E03               	swapf	3,w
   472  0006  00F9               	movwf	??_InterTimer
   473  0007  0804               	movf	4,w
   474  0008  00FA               	movwf	??_InterTimer+1
   475  0009  080A               	movf	10,w
   476  000A  00FB               	movwf	??_InterTimer+2
   477  000B  1283               	bcf	3,5	;RP0=0, select bank0
   478  000C  1303               	bcf	3,6	;RP1=0, select bank0
   479  000D  087F               	movf	btemp+1,w
   480  000E  00FC               	movwf	??_InterTimer+3
   481  000F  118A  287B         	ljmp	_InterTimer


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      13
    BANK0            80      1      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterTimer in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _InterTimer                                           4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _InterTimer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Jun 29 15:38:01 2017

            __CFG_CP$OFF 0000              _SSPSTATbits 0094                       l60 005D  
                     l63 0065                       l57 0054                      l646 0050  
                    _GIE 005F                      u147 0071                      _PR2 0092  
           __CFG_CPD$OFF 0000                      _ref 0026                      fsr0 0004  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     _PEIE 005E  
                   _TMR2 0011             __CFG_WRT$OFF 0000                     _flag 0075  
                   _main 0025                     _byte 0070                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0011            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000                    ?_main 0079            __CFG_WDTE$OFF 0000  
                  _ANSEL 009B                    _T2CON 0012                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
         __CFG_CCPMX$RB3 0000                    _Count 0020            __CFG_PWRTE$ON 0000  
         __CFG_FCMEN$OFF 0000                    _width 0023                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0013  
           __end_of_main 007B                   ??_main 0029               _InterTimer 007B  
                 _OSCCON 008F                   _TMR2IE 0461                   _TMR2IF 0061  
                 _SSPCON 0014                   _SSPBUF 0013                   _count2 0073  
                 saved_w 007E  __end_of__initialization 0022           __pcstackCOMMON 0079  
            ?_InterTimer 0079               __pbssBANK0 0020               __pmaintext 0025  
             __pintentry 0004                  _SSPSTAT 0094      __size_of_InterTimer 0017  
                __ptext1 007B     end_of_initialization 0022                _PORTAbits 0005  
           ??_InterTimer 0079      start_initialization 0013       __end_of_InterTimer 0092  
            __pbssCOMMON 0070                ___latbits 0001            __pcstackBANK0 0029  
              __pnvBANK0 0026        interrupt_function 0004                _send_data 0077  
          __size_of_main 0056                 intlevel1 0000  
